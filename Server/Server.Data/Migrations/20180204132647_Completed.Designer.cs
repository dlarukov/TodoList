// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Server.Data;
using System;

namespace Server.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20180204132647_Completed")]
    partial class Completed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Data.Classes.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("TodoId");

                    b.HasKey("Id");

                    b.HasIndex("TodoId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Server.Data.Classes.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completed");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("Server.Data.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Salt");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasFilter("[Login] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Data.Classes.Tag", b =>
                {
                    b.HasOne("Server.Data.Classes.Todo")
                        .WithMany("Tags")
                        .HasForeignKey("TodoId");
                });

            modelBuilder.Entity("Server.Data.Classes.Todo", b =>
                {
                    b.HasOne("Server.Data.Classes.User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
